{
    "WoW": {
        "description": "Measures the growth rate on a week-over-week basis.",
        "calculation_guidelines":"To calculate Week-over-Week user the following guidelines:\n- You must not use window functions (such as LAG() and LEAD()) to perform the calculations.\n- You must use CTEs to calculate the WoW Growth.\n- The final output should contain current week and the previous week's data and also the WoW Growth (comparasion between the weeks).\n- Use DATE_TRUNC with week(monday) instead of presenting week numbers.",
        "calculation_example": "'\nQuestion Example: What was the WoW sales in 2024?\nExample Output:\n-- processed_data cte: Group the data by month and perform the necessary calculations. Do not slice the data by date yet; this will be done in the final SELECT statement\nWITH processed_data as (\n  SELECT\n    DATE_TRUNC(purchase_date, week(monday)) as week_sales,\n    SUM(gross_sales) as sales\n  FROM danish-endurance-analytics.nl2sql.amazon_orders\n  GROUP BY week_sales \n),\n\n-- joined_data cte: FULL Join the data and perform the calculations\njoined_data AS (\n  SELECT\n    ty.week_sales as this_week,\n    ly.week_sales as last_week,\n\n    ty.sales as this_week_sales,\n    ly.sales as last_week_sales,\n\n    SAFE_DIVIDE(ty.sales - ly.sales, ly.sales) WoW_Growth\n  FROM processed_data ty\n  FULL JOIN processed_data ly\n    ON ty.week_sales = DATE_ADD(ly.week_sales, INTERVAL 1 WEEK)\n  ORDER BY this_week DESC\n)\n\n-- Final Select Statement: Select the data and slice the data based on the date asked by the question and order by descending\nSELECT\n  *\nFROM joined_data\nWHERE\n  EXTRACT(YEAR FROM this_week) = 2024\n'"
    },
    "MoM": {
        "description": "Measures the growth rate on a month-over-month basis.",
        "calculation_guidelines":"To calculate Month-over-Month use the following guidelines:\n- You must not use window functions to perform the calculations. Instead, use FULL join\n- The final output should contain current month and the previous month's data and also the MoM Growth (comparasion between the months).\n- Use DATE_TRUNC with month instead of presenting month numbers. Pay attention on the example below to understand how to calculate the MoM Growth.",
        "calculation_example": "Example Question: What was the MoM units sold for all the months in 2023?\nExample SQL Query:\n\n-- processed_data cte: Group the data by month and perform the necessary calculations. Do not slice the data by date yet; this will be done in the final SELECT statement.\nWITH processed_data as (\n  SELECT\n    DATE_TRUNC(purchase_date, MONTH) as month,\n    SUM(units_sold) as units_sold\n  FROM danish-endurance-analytics.nl2sql.amazon_orders\n  GROUP BY month \n),\n\n-- joined_data cte: FULL Join the data and perform the calculations\njoined_data AS (\n  SELECT\n    ty.month as this_month,\n    ly.month as last_month,\n\n    ty.units_sold as this_month_units_sold,\n    ly.units_sold as last_month_units_sold,\n\n    SAFE_DIVIDE(ty.units_sold - ly.units_sold, ly.units_sold) MoM_Growth\n  FROM processed_data ty\n  FULL JOIN processed_data ly\n    ON ty.month = DATE_ADD(ly.month, interval 1 month)\n)\n-- Final Select Statement: Select the data and slice the data based on the date asked by the question and order by descending.\nSELECT\n  *\nFROM joined_data\nWHERE\n  EXTRACT(YEAR FROM this_month) = 2023\nORDER BY this_month desc"
    }
}